{"pageProps":{"slug":"mot-so-ham-duoc-them-vao-object-rails","title":"Rails | Một số hàm được thêm vào Object","date":"Sun Mar 13 2022 23:10:26 GMT+0700 (Indochina Time)","description":"Đối với Rails thì khi bạn coding, đã có thêm một số hàm được thêm vào Object, là class mà tất cả các Object khác đều được kế thừa, bài viết này sẽ giới thiệu một số hàm này","tags":["Rails"],"content":"<h1>Một số hàm được thêm vào Object trong Rails</h1>\n<p>phiên bản được sử dụng trong bài viết là <strong>Rails 7.0.2.3</strong>, <a href=\"https://api.rubyonrails.org/classes/Object.html\">Thông tin mình lấy từ trang api của rails</a></p>\n<p>Với việc mọi Object trong Ruby đều kế thừa từ Class Object, thì khi Rails thêm một số hàm vào class này, toàn bộ các object khác đều có thể sử dụng được, và đây cũng là các hàm hỗ trợ rất nhiều cho bạn trong quá trình code.</p>\n<h2>.blank?(), .present?()</h2>\n<p>Một object là balnk nếu nó false, empty, hoặc là một string rỗng. Bạn có thể xem source code.</p>\n<pre><code class=\"hljs language-ruby\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">blank?</span></span>\n  respond_to?(<span class=\"hljs-symbol\">:empty?</span>) ? !!empty? : !<span class=\"hljs-keyword\">self</span>\n<span class=\"hljs-keyword\">end</span>\n</code></pre>\n<p>Theo đó thì object nào empty hoặc là falsey value thì sẽ blank</p>\n<pre><code class=\"hljs language-ruby\"><span class=\"hljs-number\">0</span>.blank? <span class=\"hljs-comment\"># false</span>\n[].blank? <span class=\"hljs-comment\"># true</span>\n<span class=\"hljs-string\">''</span>.blank? <span class=\"hljs-comment\"># true</span>\n</code></pre>\n<p>Hàm <code>.present?</code> thì đơn giản là ngược lại với <code>.blank?</code></p>\n<pre><code class=\"hljs language-rb\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">present?</span></span>\n  !blank?\n<span class=\"hljs-keyword\">end</span>\n</code></pre>\n<h2>.presence()</h2>\n<p>Trả về bản thân object đang gọi nếu nó present (object.present? => true) còn không thì trả về nil. object.presence tương đương với</p>\n<pre><code class=\"hljs language-rb\">object.present? ? object : <span class=\"hljs-literal\">nil</span>\n</code></pre>\n<p>Ví dụ mà presence có thể giúp bạn giảm bớt việc code</p>\n<pre><code class=\"hljs language-rb\">state   = params[<span class=\"hljs-symbol\">:state</span>]   <span class=\"hljs-keyword\">if</span> params[<span class=\"hljs-symbol\">:state</span>].present?\ncountry = params[<span class=\"hljs-symbol\">:country</span>] <span class=\"hljs-keyword\">if</span> params[<span class=\"hljs-symbol\">:country</span>].present?\nregion  = state <span class=\"hljs-params\">||</span> country <span class=\"hljs-params\">||</span> <span class=\"hljs-string\">'US'</span>\n\n<span class=\"hljs-comment\"># tương đương với</span>\n\nregion = params[<span class=\"hljs-symbol\">:state</span>].presence <span class=\"hljs-params\">||</span> params[<span class=\"hljs-symbol\">:country</span>].presence <span class=\"hljs-params\">||</span> <span class=\"hljs-string\">'US'</span>\n</code></pre>\n<p>Mã nguồn của <code>.presence</code> là</p>\n<pre><code class=\"hljs language-rb\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">presence</span></span>\n  <span class=\"hljs-keyword\">self</span> <span class=\"hljs-keyword\">if</span> present?\n<span class=\"hljs-keyword\">end</span>\n</code></pre>\n<h2>.in?(another_object), .presence_in(another_object)</h2>\n<p><code>.in?</code> trả về true nếu object hiện tại nằm trong argument. Argument phải là Array, String hoặc object nào có hàm <code>#include?</code>, nếu không nó sẽ trả về lỗi <code>ArgumentError</code>, cùng xem mã nguồn của hàm này để hiểu tại sao</p>\n<pre><code class=\"hljs language-ruby\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">in?</span><span class=\"hljs-params\">(another_object)</span></span>\n  another_object.<span class=\"hljs-keyword\">include</span>?(<span class=\"hljs-keyword\">self</span>)\n<span class=\"hljs-keyword\">rescue</span> NoMethodError\n  raise ArgumentError.new(<span class=\"hljs-string\">\"The parameter passed to #in? must respond to #include?\"</span>)\n<span class=\"hljs-keyword\">end</span>\n</code></pre>\n<p>Tiếp theo là sự kết hợp giữa <code>.presence</code> và <code>.in?</code> hàm <code>.presence_in</code> trả về object đang gọi nếu thỏa mãn <code>.in?</code> hoặc trả về nil.</p>\n<pre><code class=\"hljs language-rb\"><span class=\"hljs-number\">1</span>.<span class=\"hljs-keyword\">in</span>? [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>] <span class=\"hljs-comment\"># true</span>\n<span class=\"hljs-string\">'banana'</span>.<span class=\"hljs-keyword\">in</span>? <span class=\"hljs-string\">'strawberry apple'</span> <span class=\"hljs-comment\"># false</span>\n<span class=\"hljs-number\">1</span>.presence_in [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>] <span class=\"hljs-comment\"># 1</span>\n<span class=\"hljs-string\">'banana'</span>.presence_in <span class=\"hljs-string\">'strawberry apple'</span> <span class=\"hljs-comment\"># nil</span>\n</code></pre>"},"__N_SSG":true}